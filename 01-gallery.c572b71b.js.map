{"mappings":"AAAO,MAAMA,EAAe,CAC1B,CACEC,QACE,uFACFC,SACE,uFACFC,YAAa,mBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,6BAEf,CACEF,QACE,wEACFC,SACE,wEACFC,YAAa,qBAEf,CACEF,QACE,0EACFC,SACE,0EACFC,YAAa,iBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,oBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,yBAEf,CACEF,QACE,2EACFC,SACE,2EACFC,YAAa,yBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,oBAEf,CACEF,QACE,6EACFC,SACE,6EACFC,YAAa,yBC5DjBC,QAAQC,IAAIL,GAEZ,MAAMM,EAAmBC,SAASC,cAAc,YAE1CC,EAA0BT,EAKvBU,KACH,EAACT,QAAEA,EAAOC,SAAEA,EAAQC,YAAEA,KACpB,mEAC6BD,uDAG1BD,wBACQC,gBACRC,qCAKNQ,KAAK,IAjBVL,EAAiBM,mBAAmB,YAAaH,GAmBjDH,EAAiBO,iBAAiB,SAElC,SAAoBC,GAGhB,GAFAA,EAAMC,kBAEDD,EAAME,OAAOC,UAAUC,SAAS,kBACjC,OAGJC,EAAcC,cAAcC,OAAO,aAAaP,EAAME,OAAOM,QAAQC,WACjE,CACIC,OAAQ,KAAQC,OAAOZ,iBAAiB,UAAWa,IACnDC,QAAS,KAAQF,OAAOG,oBAAoB,UAAWF,MAGnEP,EAAYU,UAdZ,IAAIV,EAAc,KAgBlB,SAASO,EAAsBZ,GACR,WAAfA,EAAMgB,MACNX,EAAYY","sources":["src/js/gallery-items.js","src/js/01-gallery.js"],"sourcesContent":["export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","import { galleryItems } from './gallery-items.js';\n// Change code below this line\nconsole.log(galleryItems);\n\nconst galleryContainer = document.querySelector('.gallery');\n\nconst imgMarkup = creatElements(galleryItems);\ngalleryContainer.insertAdjacentHTML('beforeend', imgMarkup);\n\nfunction creatElements(galleryParam) {\n    return  galleryParam\n        .map(\n      ({ preview, original, description }) => \n        `<div class=\"gallery__item\">\n    <a class=\"gallery__link\" href=\"${original}\">\n    <img\n    class=\"gallery__image\"\n    src=\"${preview}\"\n    data-source=\"${original}\"\n    alt=\"${description}\"\n    />\n    </a>\n    </div>`\n    )\n    .join('') }\n\ngalleryContainer.addEventListener(\"click\", clickOnImg);\nlet modalWindow = null;\nfunction clickOnImg(event) {\n    event.preventDefault();\n\n    if (!event.target.classList.contains(\"gallery__image\")) {\n        return }\n    \n\n    modalWindow = basicLightbox.create(`<img src=\"${event.target.dataset.source}\">`,\n        {\n            onShow: () => { window.addEventListener(\"keydown\", closeModalWindowByEsc) },\n            onClose: () => { window.removeEventListener(\"keydown\", closeModalWindowByEsc)}\n        }   \n    );\nmodalWindow.show() }\n\nfunction closeModalWindowByEsc(event) {\n    if (event.code === \"Escape\") {\n        modalWindow.close() }\n}\n\n\n\n\n// // Решение с комментариями=============================================================================\n// import { galleryItems } from './gallery-items.js';\n// // Change code below this line\n// console.log(galleryItems);\n\n// // 1 -  получаем ссылку на <div> с классом gallery из HTML-документа >>>>>>>>>>>>>>>>>>>>>>>>>>\n// const galleryContainer = document.querySelector('.gallery');\n\n// // передаем результат  ф-ии creatElements в <div> с классом gallery (передаем разметку)\n// // creatElements(galleryItems) -  это вызов ф-ии, а  galleryItems - это аргумент (наш массив объектов - картинок),\n// // который мы передаем в ф-ю в параметр gallery.\n// const imgMarkup = creatElements(galleryItems);\n// galleryContainer.insertAdjacentHTML('beforeend', imgMarkup);\n\n\n// // создаем ф-ю creatElements, которая будет возвращать разметку наших елементов,\n// // и данную разметку будем передавать через innerHTML в наш HTML-файл (см.выше)\n// function creatElements(galleryParam) {\n//     return  galleryParam\n//     //   мэпаем наш массив обэектов, перебирая каждый из объектов\n//         // сразу же делаем деструктуризацию всех свойств каждого объекта - { preview, original, description }\n//         // вносим разметку, которая была предоставлена\n//         .map(\n//       ({ preview, original, description }) => \n//         `<div class=\"gallery__item\">\n//     <a class=\"gallery__link\" href=\"${original}\">\n//     <img\n//     class=\"gallery__image\"\n//     src=\"${preview}\"\n//     data-source=\"${original}\"\n//     alt=\"${description}\"\n//     />\n//     </a>\n//     </div>`\n//     )\n//         // делаем джойн, чтобы получить разметку в виде строки (а не в виде массива, если бы использовали\n//         // только мэп)\n//     .join('');\n// }\n\n// // Добавляем слушателя на на весь наш <div> (делегируем а него все события, которые будем получать при \n// // клике на любую из картинок )\n// galleryContainer.addEventListener(\"click\", clickOnImg);\n\n\n// let modalWindow = null;\n\n// // Функция, визивающая открытие модального окна \n// function clickOnImg(event) {\n//     event.preventDefault();\n\n//     if (!event.target.classList.contains(\"gallery__image\")) {\n//         return;\n//     }\n\n// //  в модальном окне через basicLightbox - который встроенный в библиотеку, \n// // создаем елемент img, изображение которого будет в большом размере (возьмем из свойст елемента в разметке)\n//     modalWindow = basicLightbox.create(`<img src=\"${event.target.dataset.source}\">`,\n//         {\n//             onShow: () => { window.addEventListener(\"keydown\", closeModalWindowByEsc) },\n//             onClose: () => { window.removeEventListener(\"keydown\", closeModalWindowByEsc)}\n//         }   \n//     );\n    \n// modalWindow.show();\n// }\n\n// // Функция закрытия модального окна с клавиатуры (Через Esc)\n// function closeModalWindowByEsc(event) {\n//     if (event.code === \"Escape\") {\n//         modalWindow.close(); \n//     }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Решение с Максом======================================================================\n// ====================================================================================\n\n// import { galleryItems } from './gallery-items.js';\n// // Change code below this line\n\n// // console.log(galleryItems);\n\n// function renderItems(ev) {\n//     let html = '';\n//     // перебор ел массива и отрисовка ХТМЛ\n//     for (const item of galleryItems) {\n//         html += `\n//         <div class=\"gallery__item\">\n//             <a class=\"gallery__link\" href=\"${item.original}\">\n//                 <img\n//                     class=\"gallery__image\"\n//                     src=\"${item.preview}\"\n//                     data-source=\"${item.original}\"\n//                     alt=\"${item.description}\"\n//                 />\n//             </a>\n//         </div>`;\n\n//         // console.log(item);\n//     }\n//     // Вставляем ХТМЛ на страницу\n//     document.querySelector('div.gallery').innerHTML = html;\n\n//     // перебор всех gallery__link для навешивания обработчика\n//     document.querySelectorAll('a.gallery__link').forEach(function (elem) {\n//         // вешаем обработчик клика на каждый элемент gallery__link\n//         elem.addEventListener('click',  (ev) => {\n//             ev.preventDefault();\n//             // получаем ссылку на ориг изображение\n//             const imgScrOrig = ev.target.href || ev.target.attributes['data-source'].value;\n//             // создаём лайтбокс\n//             basicLightbox.create(`\n//                 <img width=\"1400\" height=\"900\" src=\"${imgScrOrig}\">\n//             `).show();\n//         });\n//     });\n// }\n\n// document.addEventListener(\"DOMContentLoaded\", renderItems);"],"names":["$7b225180b5019822$export$f795133be3c5eb8c","preview","original","description","console","log","$97d4a16aabe2244a$var$galleryContainer","document","querySelector","$97d4a16aabe2244a$var$imgMarkup","map","join","insertAdjacentHTML","addEventListener","event","preventDefault","target","classList","contains","$97d4a16aabe2244a$var$modalWindow","basicLightbox","create","dataset","source","onShow","window","$97d4a16aabe2244a$var$closeModalWindowByEsc","onClose","removeEventListener","show","code","close"],"version":3,"file":"01-gallery.c572b71b.js.map"}